{% extends 'base.html.twig' %}

{% block title %}TUMAINI AFRICA NEWS | {{ controller_name }}{% endblock %}

{% block body %}
<div class="carousel-fixed-container relative max-w-4xl mx-auto my-2 overflow-hidden">
  <!-- Carousel Slides -->
  <div id="fixedCarousel" class="carousel-fixed-slides flex w-full">
    <!-- Item 1 -->
    <div class="rounded carousel-fixed-item flex-shrink-0 w-full h-[200px] md:h-[250px] bg-cover bg-center" style="background-image: url('https://themewagon.github.io/news/assets/img/gallery/body_card1.png')">
      <div class="w-full h-full p-4 bg-black bg-opacity-30 flex flex-col justify-between">
        <span class="inline-block bg-violet-800 hover:bg-orange-600 text-white text-xs font-semibold px-3 py-1 rounded-xl uppercase transition-colors duration-300 self-start">
          PUBLICITE
        </span>
        <div class="text-white">
          <h3 class="text-xl font-bold">Promotion Spéciale</h3>
          <p class="text-sm">Découvrez nos offres exclusives</p>
        </div>
      </div>
    </div>

    <!-- Item 2 -->
    <div class="rounded carousel-fixed-item flex-shrink-0 w-full h-[200px] md:h-[250px] bg-cover bg-center" style="background-image: url('https://themewagon.github.io/news/assets/img/gallery/body_card2.png')">
      <div class="w-full h-full p-4 bg-black bg-opacity-30 flex flex-col justify-between">
        <span class="inline-block bg-blue-600 hover:bg-orange-600 text-white text-xs font-semibold px-3 py-1 rounded-xl uppercase transition-colors duration-300 self-start">
          NOUVEAUTÉ
        </span>
        <div class="text-white">
          <h3 class="text-xl font-bold">Nouveaux Produits</h3>
          <p class="text-sm">Explorez notre dernière collection</p>
        </div>
      </div>
    </div>

    <!-- Item 3 -->
    <div class="rounded carousel-fixed-item flex-shrink-0 w-full h-[200px] md:h-[250px] bg-cover bg-center" style="background-image: url('https://themewagon.github.io/news/assets/img/gallery/body_card3.png')">
      <div class="w-full h-full p-4 bg-black bg-opacity-30 flex flex-col justify-between">
        <span class="inline-block bg-orange-600 hover:bg-violet-800 text-white text-xs font-semibold px-3 py-1 rounded-xl uppercase transition-colors duration-300 self-start">
          ÉVÉNEMENT
        </span>
        <div class="text-white">
          <h3 class="text-xl font-bold">Événement à Venir</h3>
          <p class="text-sm">Ne manquez pas notre prochain rendez-vous</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Indicators -->
  <div class="flex justify-center mt-4 space-x-2">
    <button class="carousel-fixed-indicator w-2 h-2 rounded-full bg-gray-300 hover:bg-gray-400 transition-all" data-index="0"></button>
    <button class="carousel-fixed-indicator w-2 h-2 rounded-full bg-gray-300 hover:bg-gray-400 transition-all" data-index="1"></button>
    <button class="carousel-fixed-indicator w-2 h-2 rounded-full bg-gray-300 hover:bg-gray-400 transition-all" data-index="2"></button>
  </div>
</div>
<section class="bg-gradient-to-r dark:bg-gray-900">
    <div class="py-2 px-2 mx-auto max-w-screen-xl text-center lg:py-4 lg:px-3">
      <div class="flex gap-5">
        <div class="flex-2/2 p-2">
          <div class="flex flex-col">
            <div class="relative w-full overflow-hidden">
              <div class="flex transition-transform duration-500 ease-in-out" style="transform: translateX(0%);" id="carousel-wrapper">
                {% for article in urgents %}
                <div class="relative w-full flex-shrink-0">
                  <img
                    src="{{ vich_uploader_asset(article, 'imageFile')|default("images/static/default.png") }}"
                    alt="Article 1"
                    class="w-full h-[550px] object-cover rounded-2xl"
                  />
                  <div class="rounded-xl absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-black/80 to-transparent"></div>
                  <div class="absolute bottom-4 left-4 right-4 text-white">
                    <span class="inline-block bg-red-600 text-xs font-semibold px-3 py-1 rounded-xl mb-2 uppercase">
                      {{ article.category.name }}
                    </span>
                    <h1 class="text-2xl font-bold leading-tight hover:text-orange-600 transition-colors duration-300">
                      <a href="{{ path('app_single_article_public', {'slug': article.slug}) }}">
                        {{ article.title }}
                      </a>
                    </h1>
                    <p class="text-xs opacity-70 mt-1">par {{ article.author.firstName }} - {{ article.publishedAt|date('d/m/Y à H:i') }}</p>
                  </div>
                </div>
                {% endfor %}
              </div>
              <button id="prev" class="absolute top-1/2 left-2 -translate-y-1/2 bg-black/50 hover:bg-black text-white rounded-full p-2">
                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m15 19-7-7 7-7"/>
                </svg>
              </button>
              <button id="next" class="absolute top-1/2 right-2 -translate-y-1/2 bg-black/50 hover:bg-black text-white rounded-full p-2">
                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"/>
                </svg>
              </button>
            </div>
            <div class="flex gap-5 items-start rounded-lg w-full h-fit p-4 bg-white shadow-lg mt-5">
                  <div class="flex-1 flex flex-col items-start">
                    <p class="text-indigo-950 text-4xl font-semibold">Dernières nouvelles</p>
                    <div class="items pt-5">
                      <a href="{{ path('app_single_article_public', {'slug': lastFirst.slug}) }}" alt="{{ lastFirst.title }}" class="">
                        <div class="couverture mx-auto mb-4 w-full h-[200px] rounded-lg bg-cover bg-center transition-transform duration-300 ease-in-out hover:scale-105"
                        style="background-image: url('{{ vich_uploader_asset(lastFirst, 'imageFile') ? asset(vich_uploader_asset(lastFirst, 'imageFile')) : asset('images/static/default.png') }}')">
                        </div>
                        <h1 class="text-2xl text-start font-bold text-indigo-950 hover:text-orange-600 transition-colors duration-300">
                          {{ lastFirst.title }}
                        </h1>
                        <p class="text-left text-sm text-gray-600 mt-2 py-2">par {{ lastFirst.author.firstname }} - {{ lastFirst.publishedAt|date('d M Y à H:s')  }}</p>
                      </a>
                      <p class="text-left text-gray-700">
                        {{ lastFirst.content | slice(0, 150) | raw }} ...
                      </p>
                    </div>
                  </div>
                  <div class="flex-1">
                    <div class="top flex justify-end">
                      <ul class="flex gap-2 text-indigo-950 font-semibold">
                        {% for category in categories %}
                          <li class="{{ selected_category and selected_category.id == category.id ? 'text-orange-700' : '' }}">
                            <a href="{{ path('app_home', {'category': category.slug}) }}"
                               class="uppercase hover:text-orange-700 transition-colors" data-category-slug="{{ category.slug }}" >
                               {{ category.name }}
                            </a>
                          </li>
                        {% endfor %}
                      </ul>
                    </div>
                    <div class="flex mt-8 flex-col gap-4">
                      {% for article in category_articles %}
                      <div href="#" class="flex flex-col items-center text-left md:flex-row md:max-w-xl">
                          <div class="mx-auto flex-1 h-[100px] max-w-[150px] rounded-lg bg-cover bg-center transition-transform duration-300 ease-in-out hover:scale-105"
                          style="background-image: url('{{ vich_uploader_asset(article, 'imageFile') ? asset(vich_uploader_asset(article, 'imageFile')) : asset('images/static/default.png') }}')">
                          </div>
                          <div class="flex flex-col flex-2">
                            <p class="text-xs text-violet-700 px-4 font-bold uppercase">{{ article.category.name }}</p>
                            <h1><a href="{{ path('app_single_article_public', {'slug': article.slug}) }}" class="flex flex-col px-4 justify-between flex-2 leading-normal">
                                <h5 class="mb-1 text-[13px] font-bold tracking-tight text-gray-900 hover:text-orange-700 cursor-pointer dark:text-white">
                                  {{ article.title }}
                                </h5>
                                <div class="text-sm text-gray-500">{{ article.publishedAt|date('d M Y') }}</div>
                            </h1></a>
                          </div>
                      </div>
                      {% endfor %}
                    </div>
                </div>
            </div>
          </div>
          <div class="relative w-full h-[133px] overflow-hidden my-5 rounded-lg bg-cover bg-center bg-[url('https://themewagon.github.io/news/assets/img/gallery/body_card1.png')] transition-transform duration-300 ease-in-out hover:scale-105">
              <div class="w-full top-0">
                <span class="inline-block bg-violet-800 hover:bg-orange-600 text-white text-xs font-semibold px-3 py-1 rounded-xl uppercase">
                      PUBLICITE
                </span>
                <div class="relative top-0 left-4 right-4 text-white">
                  <a href="">
                  </a>
                </div>
              </div>
        </div>
        </div>
        <div class="w-[500px] flex flex-col gap-5 text-left">
          <div class="second relative w-full flex-shrink-0 overflow-hidden inline-block">
              <img
                    src="{{ vich_uploader_asset(lastSecond, 'imageFile')|default("images/static/default.png")}}"
                    alt="{{ lastSecond.title }}"
                    class="w-full h-64 object-cover rounded-2xl transition-transform duration-300 ease-in-out hover:scale-105 hover:rounded-2xl"
                  />
                  <div class="rounded-xl absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-black/80 to-transparent hover:rounded-xl"></div>
                  <div class="absolute bottom-4 left-4 right-4 text-white">
                    <span class="inline-block bg-red-600 text-xs font-semibold px-3 py-1 rounded-xl mb-2 uppercase">
                      {{ lastSecond.category.name }}
                    </span>
                    <h2 class="text-sm font-bold leading-tight hover:text-orange-600 transition-colors duration-300">
                      <a href="{{ path('app_single_article_public', {'slug': lastSecond.slug}) }}">
                        {{ lastSecond.title }}
                      </a>
                    </h2>
                    <p class="text-xs opacity-70 mt-1">par {{ lastSecond.author.firstname }} - {{ lastSecond.publishedAt|date('d M Y')  }}</p>
                  </div>
          </div>
          <div class="troisieme relative w-full flex-shrink-0">
              <img
                    src="{{ vich_uploader_asset(lastThird, 'imageFile')|default("images/static/default.png")}}"
                    alt="{{ lastThird.title }}"
                    class="w-full h-64 object-cover rounded-2xl"
                  />
                  <div class="rounded-xl absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-black/80 to-transparent"></div>
                  <div class="absolute bottom-4 left-4 right-4 text-white">
                    <span class="inline-block bg-red-600 text-xs font-semibold px-3 py-1 rounded-xl mb-2 uppercase">
                      {{ lastThird.category.name }}
                    </span>
                    <h2 class="text-sm font-bold leading-tight hover:text-orange-600 transition-colors duration-300">
                      <a href="{{ path('app_single_article_public', {'slug': lastThird.slug}) }}">
                        {{ lastThird.title }}
                      </a>
                    </h2>
                    <p class="text-xs opacity-70 mt-1">par {{ lastThird.author.firstname }} - {{ lastThird.publishedAt|date('d M Y') }}</p>
                  </div>
          </div>

          <div class="viewed text-left bg-white shadow-lg rounded-lg p-4">
            <div class="title">
              <h2 class="text-xl font-semibold text-indigo-950 mb-4">Articles les plus visionnés</h2>
            </div>
            <div class="relative w-full flex-shrink-0">
              <img
                    src="{{ vich_uploader_asset(first_viewed, 'imageFile')|default("images/static/default.png")}}"
                    alt="{{ first_viewed.title }}"
                    class="w-full h-80 object-cover rounded-2xl"
                  />
                  <div class="rounded-xl absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-black/80 to-transparent"></div>
                  <div class="absolute bottom-4 left-4 right-4 text-white">
                    <span class="inline-block bg-red-600 text-xs font-semibold px-3 py-1 rounded-xl mb-2 uppercase">
                      {{ first_viewed.category.name }}
                    </span>
                    <h2 class="text-sm font-bold leading-tight hover:text-orange-600 transition-colors duration-300">
                      <a href="{{ path('app_single_article_public', {'slug': first_viewed.slug}) }}">{{ first_viewed.title }}</a>
                    </h2>
                    <p class="text-xs opacity-70 mt-1">par {{ first_viewed.author.firstname }} - {{ first_viewed.publishedAt|date('d/m/Y à H:i') }}<p>
                    <p class="text-xs opacity-70 mt-1">{{ first_viewed.viewCount }} Vue(s)</p>
                  </div>
            </div>
            <div class="viewd-less pt-6">
              <div>
                <div class="flex flex-col gap-4">
                {% for item in most_viewed %}
                {% if not loop.first %}
                  <div class="flex items">
                      <img src="{{ vich_uploader_asset(item, 'imageFile')|default("images/static/default.png")}}" alt="Article 1" class="w-16 h-16 object-cover rounded-lg mr-4">
                      <div>
                        <h3 class="text-sm font-semibold text-indigo-950 hover:text-orange-600 transition-colors duration-300">
                          <a href="{{ path('app_single_article_public', {'slug': item.slug}) }}">{{ item.title }}</a>
                        </h3>
                        <div class="flex justify-between">
                          <p class="text-xs text-gray-600">par {{ item.author.firstname }} - {{ item.publishedAt|date('d/m/Y à H:i') }}</p>
                          <p class="text-xs text-gray-600">{{ item.viewCount }} Vue(s)</p>
                        </div>
                      </div>
                  </div>
                {% endif %}
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
</section>
<section class="bg-gradient-to-r dark:bg-gray-900 p-5">
    <div class="flex text-left gap-5 max-w-screen-xl lg:py-8 lg:pt-2 lg:px-3 mx-auto">
      <div class="flex-2 bg-white rounded-xl">
        <div class="max-w-5xl mx-auto overflow-auto">
          <h4 class="text-xl font-bold p-4 text-">Les plus visités cette semaine</h4>
          <div class="relative">
            <button id="prevBtn" class="absolute left-0 top-1/2 -translate-y-1/2 bg-gray-200 rounded-full p-2 shadow hover:bg-gray-300 z-10">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" /></svg>
            </button>
            <button id="nextBtn" class="absolute right-0 top-1/2 -translate-y-1/2 bg-gray-200 rounded-full p-2 shadow hover:bg-gray-300 z-10">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
            </button>
            <div id="carousel" class="flex space-x-6 overflow-hidden scroll-smooth scrollbar-hide px-5">
              {% for article in trending %}
              <article class="w-[200px] min-w-[240px] flex-shrink-0 bg-white rounded-lg overflow-hidden">
                <img src="{{ vich_uploader_asset(article, 'imageFile')|default("images/static/default.png") }}" alt="Article 1" class="w-full h-40 object-cover">
                <div class="p-4">
                  <h5 class="text-lg font-semibold mb-2 text-indigo-950 hover:text-orange-600 cursor-pointer">
                    <a href="{{ path('app_single_article_public', {'slug': article.slug}) }}">{{ article.title }}</a>
                  </h5>
                  <p class="text-sm text-gray-500">{{ article.viewCount }} Vue(s)</p>
                </div>
              </article>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
    </div>
</section>
<section class="bg-gradient-to-r dark:bg-gray-900 p-5">
  <div class="flex flex-col text-left gap-5 max-w-screen-xl lg:py-8 lg:pt-2 lg:px-3 mx-auto">
    <h2 class="text-2xl font-bold mb-6">Parcourir par catégorie</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {% for category in all_categories.getCategories() %}
              {% if category.articles|length > 0 %}
                <a href="{{ path('app_category_public', {'slug': category.slug}) }}" class="group">
                    <div class="bg-white rounded-xl shadow-sm p-4 flex flex-col items-center text-center h-full transition-all duration-300 group-hover:shadow-md group-hover:-translate-y-1">
                        <div class="w-8 h-8 rounded-full bg-orange-400 flex items-center justify-center mb-3 text-primary group-hover:bg-primary group-hover:text-yellow-700 transition-colors duration-300">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                {% if loop.index == 1 %}
                                    {# Politique - Building icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                                {% elseif loop.index == 2 %}
                                    {# Économie - Chart icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                                {% elseif loop.index == 3 %}
                                    {# Culture - Book icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                {% elseif loop.index == 4 %}
                                    {# Sports - Trophy icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" />
                                {% elseif loop.index == 5 %}
                                    {# Technologie - Chip icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
                                {% else %}
                                    {# Environnement - Leaf icon #}
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                {% endif %}
                            </svg>
                        </div>
                        <h3 class="font-medium text-gray-800 group-hover:text-primary mb-1">{{ category.name }}</h3>
                        <span class="text-sm text-gray-500">{{ category.articles|length }} Articles</span>
                    </div>
                </a>
                {% endif %}
            {% endfor %}
    </div>
</section>
{% endblock %}
{% block js %}
<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.getElementById('fixedCarousel');
  const items = document.querySelectorAll('.carousel-fixed-item');
  const indicators = document.querySelectorAll('.carousel-fixed-indicator');
  
  let currentIndex = 0;
  const itemCount = items.length;
  
  // Initialize carousel width
  function initCarousel() {
    const itemWidth = carousel.clientWidth;
    items.forEach(item => {
      item.style.width = `${itemWidth}px`;
    });
    carousel.style.width = `${itemWidth * itemCount}px`;
  }
  
  // Update carousel position
  function updateCarousel() {
    const itemWidth = carousel.clientWidth / itemCount;
    const offset = -currentIndex * itemWidth;
    carousel.style.transform = `translateX(${offset}px)`;
    
    // Update indicators
    indicators.forEach((indicator, index) => {
      if (index === currentIndex) {
        indicator.classList.add('bg-gray-600', 'w-3');
        indicator.classList.remove('bg-gray-300', 'w-2');
      } else {
        indicator.classList.remove('bg-gray-600', 'w-3');
        indicator.classList.add('bg-gray-300', 'w-2');
      }
    });
  }
  
  function nextSlide() {
    currentIndex = (currentIndex + 1) % itemCount;
    updateCarousel();
  }
  
  // Auto-rotate every 5 seconds
  let autoSlide = setInterval(nextSlide, 5000);
  
  function resetAutoSlide() {
    clearInterval(autoSlide);
    autoSlide = setInterval(nextSlide, 5000);
  }
  
  indicators.forEach(indicator => {
    indicator.addEventListener('click', () => {
      currentIndex = parseInt(indicator.getAttribute('data-index'));
      updateCarousel();
      resetAutoSlide();
    });
  });
  
  // Handle window resize
  window.addEventListener('resize', () => {
    initCarousel();
    updateCarousel();
  });
  
  // Initialize
  initCarousel();
  updateCarousel();
});
</script>

<script>
  const wrapper = document.getElementById('carousel-wrapper');
  const slides = wrapper.children;
  const totalSlides = slides.length;
  let index = 0;

  function showSlide(i) {
    wrapper.style.transform = `translateX(-${i * 100}%)`;

    // Animation texte : enlever puis remettre la classe d'animation pour relancer l'effet
    for (let slide of slides) {
      const textDiv = slide.querySelector('.slide-text');
      textDiv.classList.remove('animate-fade-slide-up');
      // Forcer reflow pour reset animation
      void textDiv.offsetWidth;
    }
    // Ajouter la classe sur la slide active
    const activeText = slides[i].querySelector('.slide-text');
    activeText.classList.add('animate-fade-slide-up');
  }

  // Manually go to next slide
  document.getElementById('next').addEventListener('click', () => {
    index = (index + 1) % totalSlides;
    showSlide(index);
  });

  // Manually go to prev slide
  document.getElementById('prev').addEventListener('click', () => {
    index = (index - 1 + totalSlides) % totalSlides;
    showSlide(index);
  });

  // Autoplay every 3 seconds (3000 ms)
  setInterval(() => {
    index = (index + 1) % totalSlides;
    showSlide(index);
  }, 5000);

  // Initial animation on first slide
  showSlide(0);
</script>
<script>
  const carousel = document.getElementById('carousel');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');

  const scrollAmount = 245 + 24; // largeur article + espace

  prevBtn.addEventListener('click', () => {
    carousel.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
  });

  nextBtn.addEventListener('click', () => {
    carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
  });

  // Auto-scroll infini (boucle)
  let autoScrollInterval = setInterval(() => {
    if (carousel.scrollLeft >= carousel.scrollWidth - carousel.clientWidth) {
      carousel.scrollTo({ left: 0, behavior: 'smooth' });
    } else {
      carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
    }
  }, 4000);

  // Pause auto-scroll au hover
  carousel.addEventListener('mouseenter', () => clearInterval(autoScrollInterval));
  carousel.addEventListener('mouseleave', () => {
    autoScrollInterval = setInterval(() => {
      if (carousel.scrollLeft >= carousel.scrollWidth - carousel.clientWidth) {
        carousel.scrollTo({ left: 0, behavior: 'smooth' });
      } else {
        carousel.scrollBy({ left: scrollAmount, behavior: 'smooth' });
      }
    }, 4000);
  });
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const player = document.getElementById('podcast-player');
    const playBtn = document.getElementById('play-btn');
    const playIcon = document.getElementById('play-icon');
    const pauseIcon = document.getElementById('pause-icon');
    const progressBar = document.getElementById('progress-bar');
    const currentTimeEl = document.getElementById('current-time');
    const durationEl = document.getElementById('duration');
    const volumeControl = document.getElementById('volume-control');
    const muteBtn = document.getElementById('mute-btn');
    const volumeOn = document.getElementById('volume-on');
    const volumeOff = document.getElementById('volume-off');
    const skipForward = document.getElementById('skip-forward');
    const skipBackward = document.getElementById('skip-backward');
    const speedBtn = document.getElementById('speed-btn');
    const shareBtn = document.getElementById('share-btn');
    const sharePanel = document.getElementById('share-panel');
    const copyUrlBtn = document.getElementById('copy-url');
    const shareUrl = document.getElementById('share-url');

    // Format time in MM:SS
    function formatTime(seconds) {
        const mins = Math.floor(seconds / 60);
        const secs = Math.floor(seconds % 60);
        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
    }

    // Update progress bar and time
    function updateProgress() {
        const currentTime = player.currentTime;
        const duration = player.duration || 1;
        const progressPercent = (currentTime / duration) * 100;
        progressBar.value = progressPercent;
        currentTimeEl.textContent = formatTime(currentTime);
    }

    // Set initial state
    function initPlayer() {
        // Hide native controls to use our custom ones
        player.controls = false;
        
        // Set initial icons state
        if (player.paused) {
            playIcon.classList.remove('hidden');
            pauseIcon.classList.add('hidden');
        } else {
            playIcon.classList.add('hidden');
            pauseIcon.classList.remove('hidden');
        }
        
        // Set initial volume
        player.volume = volumeControl.value;
        player.muted = false;
    }

    // Set duration when metadata is loaded
    player.addEventListener('loadedmetadata', function() {
        durationEl.textContent = formatTime(player.duration);
    });

    // Update time immediately when audio can play
    player.addEventListener('canplay', function() {
        updateProgress();
    });

    // Play/pause toggle
    function togglePlayPause() {
        if (player.paused) {
            player.play()
                .then(() => {
                    playIcon.classList.add('hidden');
                    pauseIcon.classList.remove('hidden');
                })
                .catch(error => {
                    console.error('Playback failed:', error);
                    // Show error to user if needed
                    alert('La lecture a échoué : ' + error.message);
                });
        } else {
            player.pause();
            playIcon.classList.remove('hidden');
            pauseIcon.classList.add('hidden');
        }
    }

    playBtn.addEventListener('click', togglePlayPause);
    
    // Also allow clicking directly on the audio element
    player.addEventListener('click', togglePlayPause);

    // Update progress continuously
    player.addEventListener('timeupdate', updateProgress);

    // Seek when progress bar is clicked
    progressBar.addEventListener('input', function() {
        const seekTime = (player.duration / 100) * progressBar.value;
        player.currentTime = seekTime;
    });

    // Volume control
    volumeControl.addEventListener('input', function() {
        player.volume = volumeControl.value;
        if (player.volume > 0) {
            volumeOn.classList.remove('hidden');
            volumeOff.classList.add('hidden');
            player.muted = false;
        }
    });

    // Mute toggle
    muteBtn.addEventListener('click', function() {
        player.muted = !player.muted;
        if (player.muted) {
            volumeOn.classList.add('hidden');
            volumeOff.classList.remove('hidden');
        } else {
            volumeOn.classList.remove('hidden');
            volumeOff.classList.add('hidden');
        }
    });

    // Skip forward 15 seconds
    skipForward.addEventListener('click', function() {
        player.currentTime = Math.min(player.currentTime + 15, player.duration);
    });

    // Skip backward 15 seconds
    skipBackward.addEventListener('click', function() {
        player.currentTime = Math.max(player.currentTime - 15, 0);
    });

    // Playback speed control
    const speeds = [0.5, 0.75, 1, 1.25, 1.5, 2];
    let currentSpeedIndex = 2; // Default 1x

    speedBtn.addEventListener('click', function() {
        currentSpeedIndex = (currentSpeedIndex + 1) % speeds.length;
        const newSpeed = speeds[currentSpeedIndex];
        player.playbackRate = newSpeed;
        speedBtn.textContent = newSpeed + 'x';
    });

    // Share panel toggle
    shareBtn.addEventListener('click', function() {
        sharePanel.classList.toggle('hidden');
    });

    // Copy URL to clipboard (modern approach)
    copyUrlBtn.addEventListener('click', function() {
        navigator.clipboard.writeText(shareUrl.value)
            .then(() => {
                const originalText = copyUrlBtn.textContent;
                copyUrlBtn.textContent = 'Copié!';
                setTimeout(() => {
                    copyUrlBtn.textContent = originalText;
                }, 2000);
            })
            .catch(err => {
                console.error('Failed to copy: ', err);
            });
    });

    // Initialize player
    initPlayer();
});
</script>

{% endblock %}
